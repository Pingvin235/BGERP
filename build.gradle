apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'

repositories {
    mavenLocal()
    mavenCentral()
}

sourceCompatibility = '11'
targetCompatibility = '11'

// Eclipse and VS Code use bin
buildDir = 'target'

version = '3.0'

eclipse {
    classpath {
        // speed up of initial start, change if needed
        downloadJavadoc = false
        downloadSources = false
    }
}

idea {
    module {}
}

configurations {
    all {
        transitive = false
    }
    pzdcdoc {
        transitive = true
    }
    bgerp
    itest.extendsFrom(bgerp)
    tools.extendsFrom(bgerp)
    // for running inside IDE
    compile.extendsFrom(bgerp, tools, itest)
}

dependencies {
    // OpenJDK 11 
    // http://qaru.site/questions/16251978/migration-jaxws-application-from-java-8-to-java-11 
    // https://www.jesperdj.com/2018/09/30/jaxb-on-java-9-10-11-and-beyond/
    bgerp('javax.xml.bind:jaxb-api:2.3.1')
    bgerp('org.glassfish.jaxb:jaxb-runtime:2.3.1') // 2.4.0-b180830.0438
    bgerp('javax.xml.ws:jaxws-api:2.3.1')
    bgerp('javax.jws:javax.jws-api:1.1')
    bgerp('com.sun.xml.ws:jaxws-rt:2.3.1')
    bgerp('com.sun.xml.ws:rt:2.3.1')
    bgerp('com.sun.istack:istack-commons-runtime:3.0.7')
    bgerp('com.sun.xml.stream.buffer:streambuffer:1.5.6')
    bgerp('com.sun.xml.ws:policy:2.7.5')
    bgerp('org.jvnet.staxex:stax-ex:1.8')
    bgerp('javax.xml.soap:javax.xml.soap-api:1.4.0')
    bgerp('com.sun.xml.messaging.saaj:saaj-impl:1.5.0')
    bgerp('org.glassfish.gmbal:gmbal-api-only:3.1.0-b001')
    bgerp('org.jvnet.mimepull:mimepull:1.9.10')
    
    // библиотеки для BGERP, утилит и плагинов (добавлять после новые библиотеки)
    bgerp group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'
    bgerp group: 'log4j', name: 'log4j', version: '1.2.17'
    // needed only for StackLocatorUtils
    bgerp group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.2'	
    
    bgerp group: 'org.apache.tomcat.embed', name: 'tomcat-embed-jasper', version: '9.0.12'
    bgerp group: 'org.eclipse.jdt.core.compiler', name: 'ecj', version: '4.6.1'
    bgerp group: 'org.apache.tomcat.embed', name: 'tomcat-embed-el', version: '9.0.12'
    // модифицированный Tomcat
    bgerp files('lib/tomcat9/tomcat-embed-core-9.0.12.jar')
    // эта зависимость может быть нужна для получения и отладки его исходников
    //bgerp group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: '9.0.12'
    
    bgerp group: 'javax.servlet.jsp.jstl', name: 'javax.servlet.jsp.jstl-api', version: '1.2.2'
    bgerp group: 'org.apache.taglibs', name: 'taglibs-standard-impl', version: '1.2.5'
    
    bgerp group: 'org.apache.struts', name: 'struts-core', version: '1.3.10'
    bgerp group: 'org.apache.struts', name: 'struts-extras', version: '1.3.10'
    bgerp group: 'org.apache.struts', name: 'struts-taglib', version: '1.3.10'
    bgerp group: 'org.apache.struts', name: 'struts-tiles', version: '1.3.10'
    
    bgerp group: 'com.sun.mail', name: 'javax.mail', version: '1.6.2'
    bgerp group: 'javax.activation', name: 'activation', version: '1.1.1' //TODO: Fix using classes and remove library.
    bgerp group: 'com.google.guava', name: 'guava', version: '27.0.1-jre'
    bgerp group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.3'
    bgerp group: 'commons-chain', name: 'commons-chain', version: '1.2'
    bgerp group: 'commons-collections', name: 'commons-collections', version: '3.2.2'  //bgerp group: 'org.apache.commons', name: 'commons-collections4', version: '4.2'
    bgerp group: 'commons-dbcp', name: 'commons-dbcp', version: '1.4'
    bgerp group: 'commons-digester', name: 'commons-digester', version: '2.1' // bgerp group: 'org.apache.commons', name: 'commons-digester3', version: '3.2'
    bgerp group: 'commons-el', name: 'commons-el', version: '1.0'
    bgerp group: 'commons-fileupload', name: 'commons-fileupload', version: '1.4'
    bgerp group: 'commons-io', name: 'commons-io', version: '2.6'
    bgerp group: 'org.apache.commons', name: 'commons-jexl3', version: '3.1'
    bgerp group: 'commons-lang', name: 'commons-lang', version: '2.6'  // bgerp group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'
    bgerp group: 'commons-logging', name: 'commons-logging', version: '1.2'
    bgerp group: 'commons-pool', name: 'commons-pool', version: '1.6' // bgerp group: 'org.apache.commons', name: 'commons-pool2', version: '2.6.0'
    bgerp group: 'commons-validator', name: 'commons-validator', version: '1.6'
    bgerp group: 'ar.com.fdvs', name: 'DynamicJasper', version: '5.1.1'
    bgerp group: 'org.apache.httpcomponents', name: 'fluent-hc', version: '4.5.7'
    bgerp group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.7'
    bgerp group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.4.11'
    bgerp group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.9.8' // TODO: get rid together with XSLT
    bgerp group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.8' // TODO: get rid together with XSLT
    bgerp group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.4.1.3'  // 2.9.8 TODO: get rid together with XSLT
    bgerp group: 'net.sf.jasperreports', name: 'jasperreports', version: '6.7.0'
    bgerp group: 'org.jsoup', name: 'jsoup', version: '1.11.3'
    bgerp group: 'mysql', name: 'mysql-connector-java', version: '8.0.19'
    bgerp group: 'org.apache.poi', name: 'poi', version: '4.0.1'
    bgerp group: 'org.apache.commons', name: 'commons-collections4', version: '4.3' // required for poi
    bgerp group: 'xalan', name: 'xalan', version: '2.7.1'
    bgerp group: 'xalan', name: 'serializer', version: '2.7.1'
    bgerp group: 'net.sf.saxon', name: 'Saxon-HE', version: '9.4'
    bgerp group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
    bgerp group: 'org.asteriskjava', name: 'asterisk-java', version: '3.3.0'
    bgerp group: 'org.reflections', name: 'reflections', version: '0.9.12' // required for asteriskjava
    bgerp group: 'org.javassist', name: 'javassist', version: '3.27.0-GA' // required for asteriskjava
    bgerp group: 'com.itextpdf', name: 'itextpdf', version: '5.5.13'
    
    // Telegram
    bgerp group: 'org.telegram', name: 'telegrambots', version: '4.2'
    bgerp group: 'org.telegram', name: 'telegrambots-meta', version: '4.2'
    bgerp group: 'aopalliance', name: 'aopalliance', version: '1.0'
    bgerp group: 'org.json', name: 'json', version: '20180813'
    bgerp group: 'com.google.guava', name: 'failureaccess', version: '1.0.1'
    bgerp group: 'com.google.inject', name: 'guice', version: '4.2.2'
    bgerp group: 'javax.inject', name: 'javax.inject', version: '1'

    // библиотеки, сохранённые в проекте (старый подход, больше не добавлять)
    bgerp fileTree(dir: 'lib', include: ['*.jar'])
    
    // Unit tests of the main code
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.hamcrest:hamcrest-core:1.3'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.1.0'
    
    // documentation library
    pzdcdoc group: 'org.pzdcdoc', name: 'pzdcdoc', version: '1.9'
    
    // integration test
    itest group: 'org.testng', name: 'testng', version: '7.1.0' // '6.14.3' 
    itest group: 'com.beust', name: 'jcommander', version: '1.72'
    itest group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'
    itest group: 'org.seleniumhq.selenium', name: 'selenium-api', version: '3.141.59'
    itest group: 'org.seleniumhq.selenium', name: 'selenium-remote-driver', version: '3.141.59'
    itest group: 'org.seleniumhq.selenium', name: 'selenium-support', version: '3.141.59'
    itest group: 'org.seleniumhq.selenium', name: 'selenium-chrome-driver', version: '3.141.59'
    itest group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.13.1'	
    itest group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: '1.3.21'
    itest group: 'com.squareup.okio', name: 'okio', version: '2.2.2'
    itest group: 'net.bytebuddy', name: 'byte-buddy', version: '1.9.10'
    itest group: 'org.apache.commons', name: 'commons-exec', version: '1.3'
}

// вызывается из сборщика на Ant
task copyLibBGCRM(type: Copy) {
    into "$buildDir/lib"
    from configurations.bgerp
}

sourceSets {
    main {
        java {
            srcDir 'src'
            srcDir 'dyn'
        }
        resources {
            srcDir 'src'
        }
        // makes warning on assigning simple output.classesDir
        output.resourcesDir = "${buildDir}/classes/java/main"
    }
    test {
        java {
            srcDir 'srcx/test'
        }
        resources {
            srcDir 'srcx/test'
        }
    }
    tools {
        java {
            srcDir 'srcx/tools'
        }
        compileClasspath = configurations.tools + sourceSets.main.output
        runtimeClasspath = output + compileClasspath
    }
    itest {
        java {
            srcDir 'srcx/itest'
        }
        resources {
            srcDir 'srcx/itest'
        }
        // makes warning on assigning simple output.classesDir
        output.resourcesDir = "${buildDir}/classes/java/itest"
        compileClasspath = configurations.itest + sourceSets.main.output
        runtimeClasspath = output + compileClasspath
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task buildDoc(type: JavaExec) {
    classpath =  configurations.pzdcdoc
    main = 'org.pzdcdoc.DocGenerator'
    args 'NOTUSED', 'srcx/doc', 'target/doc'
}

task buildJavaDoc(type: Javadoc) {
    options.encoding = 'UTF-8'
    failOnError = false
    classpath = configurations.bgerp
    source = sourceSets.main.allJava
    destinationDir = file("${buildDir}/javadoc")
}

task patchChanges(type: JavaExec, dependsOn: 'compileToolsJava') {
    classpath =  sourceSets.tools.runtimeClasspath
    main = 'ru.bgerp.tool.PatchChanges'
    args "${->getBuild()}", 'build/changes.txt'
}

def getBuild() {
    def buildProperties = new Properties()
    file("$projectDir/build/update/update.properties").withInputStream { stream -> buildProperties.load(stream) }
    def build = buildProperties.get('build.number')
    println "Build: $build"
    return build
}

task rss(type: JavaExec, dependsOn: 'compileToolsJava') {
    mustRunAfter 'patchChanges'
    classpath =  sourceSets.tools.runtimeClasspath
    main = 'ru.bgerp.tool.RssGenerator'
    args version, 'build/changes.txt', 'build/changes.xml'
}

task buildDist(type: Exec, dependsOn: 'classes', description: 'Builds distribution archive') {
    workingDir "$projectDir/build/bgerp"
    commandLine "ant"
    environment classesPath: "../../target/classes/java/main"
}

task buildUpdate(type: Exec, dependsOn: 'classes', description: 'Builds distribution and update archives') {
    workingDir "$projectDir/build/update"
    commandLine "ant"
    environment classesPath: "../../target/classes/java/main"
}

task buildUpdateLib(type: Exec, description: 'Builds library update archive') {
    workingDir "$projectDir/build/update_lib"
    commandLine "ant"
}

task buildClean(type: Delete) {
    delete fileTree("$projectDir/build").matching {
        include "bgerp/bgerp_${version}_*.zip"
        include "update/update_${version}_*.zip"
        include "update_lib/update_lib_${version}_*.zip"
    }
}

task startServer(type: JavaExec, dependsOn: 'classes', description: 'Starts server with bgerp.properties') {
    classpath =  sourceSets.main.runtimeClasspath
    main = 'ru.bgerp.Server'
    args 'start'
    systemProperties = [
        'bgerp.setup.data': findProperty('bgerp.setup.data') ?: 'bgerp',
        'java.net.preferIPv4Stack': true
    ]
}

task resetProperties {
    doFirst {
        println "Reset update.properties"
        "git checkout -- $projectDir/build/update/update.properties".execute()
        println "Reset update_lib.properties"
        "git checkout -- $projectDir/build/update_lib/update_lib.properties".execute()
    }
}

task touchChanges {
    doFirst {
        def processId = getProcessId()
        def changesFile = "$projectDir/build/changes.${processId}.txt"
        "touch $changesFile".execute()
    }
}

def getProcessId() {
    def branchName = 'git rev-parse --abbrev-ref HEAD'.execute().text.trim()
    println "Branch name: $branchName"
        
    def m  = branchName =~ /^p(\d+)\-/
    if (!m) throw new GradleException("Incorrect branch name: $branchName")
        
    def processId = m[0][1]
    println "Process ID: $processId"

    return processId
}

apply from: "build/publish.gradle"

test {
    testLogging {
        showStandardStreams = true
        exceptionFormat = "full"
        events "passed", "skipped", "failed"
    }
    outputs.upToDateWhen {false}
}

/*
    Complete run:
        gradlew integrationTest -Pdb.user=* -Pdb.pswd=* -Pdb.host=localhost
    Only wanted groups with dependencies:
        -Pgroups.include=initUsers
    Skip heavy DB reset:
        -Pskip.dbReset=true
*/
task integrationTest(type: Test) {
    // failFast = true SQL logs are not visible

    useTestNG() {
        def propInclude = findProperty("groups.include")
        if (propInclude) { 
            includeGroups propInclude
        }
    }
    classpath = sourceSets.itest.runtimeClasspath
    testClassesDirs = sourceSets.itest.output.classesDirs
    testLogging {
        showStandardStreams = true
        exceptionFormat = "full"
        events "passed", "skipped", "failed"
    }
    outputs.upToDateWhen {false}

    systemProperty "db.host", findProperty("db.host")
    systemProperty "db.user", findProperty("db.user")
    systemProperty "db.pswd", findProperty("db.pswd")
    systemProperty "webdriver.chrome.driver", findProperty("webdriver.chrome.driver")
    systemProperty "skip.dbReset", findProperty("skip.dbReset")
}
